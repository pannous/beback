#!/usr/bin/env nodemon
var express = require('express');
var passport = require('passport');
var LocalStrategy = require('passport-local').Strategy;
var db = require('./db');

// var conf = require('./conf')
port=3003
var app = express();
app.engine('html', require('ejs').renderFile);
app.use(require('serve-static')(__dirname+'./public'));
app.use(require('cookie-parser')());
// app.use(require('body-parser').urlencoded({ extended: true }));
// app.use(require('express-session')({ secret: 'miau', resave: true, saveUninitialized: true }));
app.use(passport.initialize());
app.use(passport.session());

passport.use(new LocalStrategy(
  function(username, password, done) {
    User.findOne({ username: username }, function (err, user) {
      if (err) { return done(err); }
      if (!user) { return done(null, false); }
      if (!user.verifyPassword(password)) { return done(null, false); }
      return done(null, user);
    });
  }
));
passport.serializeUser(function(user, cb) {
  cb(null, user.id);
});

passport.deserializeUser(function(id, cb) {
  db.users.findById(id, (err, user) =>{if (err) { return cb(err); }else cb(null, user); })
});


app.post('/login', passport.authenticate('local', { successRedirect: '/', failureRedirect: '/login' }));

app.post('/login', 
  passport.authenticate('local', { failureRedirect: '/login' }),
  function(req, res) {
    res.redirect('/');
  });

app.get('/',(req,res)=>{res.send("OK"+req.user)})

app.get('/x', function (req, res) {
  console.log(req.user);  // FTW!
  res.render('home');
});

app.listen(port, function () {
	// setup();
  console.log('app listening on http://localhost:'+port);
});  